package main

// #cgo LDFLAGS: -L${SRCDIR}/../build/lib/ -lgo-gnuradio-ptr
// #include "go_gnuradio.h"
import "C"
import (
 "fmt"
 "sync"
)

// START OF CODE AUTOGENERATED BY GO-GNURADIO. 
// DO NOT MODIFY UNLESS YOU KNOW WHAT YOU ARE DOING.

// Internal struct used by go-gnuradio
type _goGRStruct struct {
  set_output_multiple_ptr uint64
  history_ptr uint64
  set_history_ptr uint64
}

var _QpskDemodCbStorageMutex sync.Mutex
var _QpskDemodCbStorage []*QpskDemodCb

//export QpskDemodCbGoGRInit
func QpskDemodCbGoGRInit(set_output_multiple_ptr uint64, history_ptr uint64, set_history_ptr uint64) int {
  _QpskDemodCbStorageMutex.Lock()
  defer _QpskDemodCbStorageMutex.Unlock()
  block := &QpskDemodCb{
    _go: &_goGRStruct{
      set_output_multiple_ptr: set_output_multiple_ptr,
      history_ptr: history_ptr,
      set_history_ptr: set_history_ptr,
    },
  }
  _QpskDemodCbStorage = append(_QpskDemodCbStorage, block)
  fmt.Println("Initialized from Go!!!")
  return len(_QpskDemodCbStorage) - 1
}

//export QpskDemodCbWork
func QpskDemodCbWork(in []float32, out []uint8, idx int) int {
  block := _QpskDemodCbStorage[idx]
  return block.Work(in, out) // This could be unnecessary overhead?
}

//export QpskDemodCbDelete
func QpskDemodCbDelete(idx int) {
  _QpskDemodCbStorageMutex.Lock()
  defer _QpskDemodCbStorageMutex.Unlock()
  _QpskDemodCbStorage[idx] = nil
}

func (block *QpskDemodCb) SetOutputMultiple(output_multiple int32) {
  C._ExecSetOutputMultiple(C.ulonglong(block._go.set_output_multiple_ptr), C.int(output_multiple))
}

func (block *QpskDemodCb) History() uint32 {
  return uint32(C._ExecHistory(C.ulonglong(block._go.history_ptr)))
}

func(block *QpskDemodCb) SetHistory(history uint32) {
  C._ExecSetHistory(C.ulonglong(block._go.set_history_ptr), C.uint(history))
}

// END OF CODE AUTOGENERATED BY GO-GNURADIO. 
// DO NOT MODIFY UNLESS YOU KNOW WHAT YOU ARE DOING.

type QpskDemodCb struct {
  // Store your user defined parameters here
  GrayCode bool

  _go *_goGRStruct // Leave this member alone. Used by go-gnuradio.
}

// This function is used to initialize member variables for your block.
// Do what you would do in the C++ constructor here. e.g. set_output_multiple, etc.
// When you modify this function's signature, don't forget to modify the same in *_impl.cc
//export QpskDemodCbInit
func QpskDemodCbInit(_idx int, gray_code bool) {
  block := _QpskDemodCbStorage[_idx]  // Line autogenerated by go-gnuradio

  // User initialization starts here. e.g.
  // block.MyVariable = myVariable
  // You can also call setup functions such as set_output_multiple e.g.
  // block.SetOutputMultiple(64)
  block.GrayCode = gray_code
}

func (block *QpskDemodCb) Work(in []float32, out []uint8) int {
  // Signal processing is done here. Place your results directly in `out`.
  // Do NOT modify `in` or you will break things! Go does not have const references. 
  for i := 0; i < len(in); i++ {
    if (block.GrayCode) {
      out[i] = uint8(in[i])
    } else {
      out[i] = uint8(in[i]*255)
    }
  }
  return len(in)
}

func main() {}
